@startuml
' === Title ===
title Add a New Product

' === Style  ===

skinparam {
  Style StrictUML
  RoundCorner 5
  ParticipantPadding 10
  Padding 2
  SequenceStereotype {
    Font {
      Size 10
      Style plain
    }
  }
}

' === Actors / Participants
actor "User" as user
participant "ProductCatalogue\n:MainMenu" as menu <<form>>
participant "AddProduct\n:AddProuductForm" as addProduct <<form>>
participant "dataStore\n:ProductCollectionsDAO" as dataStore <<data store>>
participant "product\n:Product" as product <<domain>>

' === Messages ===
user -> menu : click "Add a New Product" button
menu++
menu -> addProduct : AddProduct()
addProduct++

addProduct -> dataStore : getCategories()
dataStore++
return categories 

addProduct -> addProduct : updateItems(categories)

user -> addProduct : enter Product ID
user -> addProduct : enter Product Name
user -> addProduct : enter Product Description
user -> addProduct : select Product Category
user -> addProduct : enter Product List Price
user -> addProduct : enter Quantity in Stock

user -> addProduct : click "Save"
create product
addProduct -> product : <<construct from data>>

alt Price and Quantity are integers
  addProduct -> addProduct : check if List Price is an integer
  addProduct -> addProduct : check if Quantity in Stock is an integer
  addProduct -> dataStore : saveProduct(product)
  dataStore++
  dataStore--
  addProduct --> menu
else Price or Quantity are not integers
  addProduct --> user : Display error message
  destroy addProduct
end
@enduml